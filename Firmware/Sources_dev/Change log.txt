V1.3
	-Introduced alternative to fuel gauge ic way of remaining state of charge estimation, together with fixes of fuel gauge estimation.
		-By default fuel gauge ic is used, and if it is not present or in faulty state, RSoC estimation is calculated directly by mcu.
		-Battery profiles are extended with battery parameters used in RSoC estimation (battery chemistry, open circuit voltage, internal impedance).
		-Introduced possibility to force direct mcu way of estimation by configuration command.
	-Battery temperature measurement fixes.
	-Added possibility to configure IO2 as digital input wake-up interrupt, enabling peripheral attached to P3 header to wake-up Raspberry Pi.
	-Rpi reset after update fix
	-Added alternative wakeup via Rpi SCL (GPIO3) if run pin is not connected via pogo pin.

	V1.3_2019_02_28
		- Updated list of predefined battery profiles:
		['BP6X_1400', 'BP7X_1820', 'SNN5843_2300', 'PJLIPO_12000', 'PJLIPO_5000', 'PJBP7X_1600', 'PJSNN5843_1300', 'PJZERO_1200', 'PJZERO_1000', 'PJLIPO_600', 'PJLIPO_500']

		- Fixed reading of extended battery profile data
	
	V1.3_2019_07_09
		- GPIO current estimation fix

V1.4
	V1.4_2019_11_04
		- Solving i2c issue with RPI 4B and i2c-bcm2835. Re-implemented i2c slave host interface block read so it does not need to use hard-coded delay, which is rpi/os version dependent, to detect repeated start condition.
		- Fixing wrong temperature measurement.
		- Updated battry profile list, Pj Zero 1000mAh is now assigned to profile code 0.
		- Update based on customer observation Issue#356. Now Delayed power off will be canceled if Rpi 5V power is restored during delayed power off interval
	
	V1.4_2019_12_23
		- Fixed bad i2c handle reference in command_server.c that caused incorrect read/write of i2c slave address. This bug is introduced in V1.4_2019_11_04 after i2c interface updates, where part of code left non-updated.
	
	V1.4_2019_12_30
		- Fixed missing wake-up flags clearing in case wake-up is triggered over the GPIO3.

	V1.4_2020_01_17
		- Corrected I2C timing
        
V1.5
    V1.5_2020_12_24
    - Wake-up on charge restore. Update that makes possible to save wake-up on 
    charge configuration to the mcu flash, and restore it after power reset. Also 
    if restore is enabled, wake-up on charge will be automatically activated when 
    charging stops after power source is removed. This improves wake-up reliability 
    if system fails to properly configure wake-up when it halts.
    - Watchdog restore. Introduced possibility to save watchdog configuration to 
    the mcu flash. If restore is enabled, watchdog configuration will be restored 
    after power reset and watchdog will be automatically activated after wake-up 
    trigger (wake-up on charge, rtc wake-up or io wake-up). So if wake-up process 
    fails, no response from host (for example boot process stuckes), watchdog will 
    trigger reset. This feature should be used together with software polling over 
    i2c or system task enabled. Software or system task should deactivate watchdog 
    on system halt.
    - Extended maximum possible value range for battery capacity configuration to 
    [0-4194175mAh].
    - Added new profile for PiJuice 2500mAh battey.
    - Introduced experimental FreeRTOS as part of migration process to RTOS or other 
    mcu. It is not enabled by default in this release,but can be configured by 
    setting project wide macro: RTOS_FREERTOS.
        
    V1.5_2021_01_18
    -Fixed issue with false marking GPIO input power as BAD when power supply voltage 
    is close to threshold. DPM voltage is changed from 4.76V to 4.68V.

    V1.5_2021_02_04
    - 5V Regulator turn-on overload fault issue patch. DCDC 5V regulator goes to 
    fault state when turning on with high load current and large capacitance at GPIO 
    rail. turn-on procedure updated with 3 retires in short intervals ~1ms.
    - Fixed I2C stucking in case of transfer error, when tx buffer is left empty and
    indefinitely fires interrupts until watchdog reset.
    - Button event automatic removal update. Event is cleared on next button action 
    and timeout of 30 seconds. This solves problems of unresponsive Button presses 
    after it failes to clear event by I2C command.
    - Battery temperature measurement updated for NTC resistance other than 10K. Now
    temperature measured by fuel gauge is recalculated based on NTC resistance value
    from battery profile that can be customized.

    V1.5_2021_02_06
    - Fixed RTC Alarm problem, when it misses to trigger wake-up in mcu run mode.  
    Patched by polling Alarm flag instead of waiting for interrupt.

V1.6
    V1.6_2021_07_02
    - Introduced logging, up to 32, 31 bytes long messages, are saved into circular
    buffer. New I2C command 0xF6 implemented to read log messages from host.
    For specific message types are defined:
	LOG_5VREG_ON - logs 5V regulator power on process, it shows battery voltage 
		and 5V signals that could be evaluated for conditions like overloading 
		at turn on.
	LOG_5VREG_OFF - logs if there was unexpected or forced power off of the 5V 
		regulator. 
	WAKEUP_EVT - Logs system status after some of the triggers (RTC Alarm or 
		wakeup on charge or Io wakeup).
	ALARM_EVT - Log status after RTC alarm peripheral interrupt.

    V1.6_2021_07_17
    - Load current sense update for hardware version 2.3.0. New GPIO 5V current 
	measurement using NCS213 current sense amp.
    - Power good signal for 5V regulator used to disable 5V regulator if regulator is 
	in fault state. Hardware version 2.3.0.
    - Introduced option to enable/disable log. Disabled  by default.
    
    V1.6_2021_09_10
    - Fixed instant watchdog wakeup trigger after restore.
    - Fixed missing wakeup restore enable on power on whne power source is present and no battery, issue #760.
